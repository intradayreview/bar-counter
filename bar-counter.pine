//@version=5
indicator(title='intradayreview.com indicator', overlay=true, max_labels_count=500)

startDate = input.time(defval=timestamp('01 Jan 2000 00:00 +0000'), title='Start Time')
endDate = input.time(defval=timestamp('01 Jan 3000 00:00 +0000'), title='End Time')
sessionRange = input.session(defval='0800-1700', title='My Session Range')
showsessionBG = input(title='Session Background Colour ?', defval=true)
showCandelCounter = input(title='Show Candel Counter ?', defval=true)
showCandelAnalysis = input(title='Show Candel Analysis ?', defval=true)
candelAnalysisLast2Only = input(title='Show Analysis Last 2 Candel only ?', defval=true)
color sessionBGColor = input(color.rgb(0, 0, 220, 90), 'Session Background Color')
color barCountColor = input(color.black, 'Bar Count Color')
color candelAnalysisColor = input(color.black, 'Candel Analysis Color')

// Returns true if the current candel falls within session range
inSession(sess) =>
    na(time(timeframe.period, sess + ':1234567')) == false and time >= startDate and time <= endDate

// Candel Analysis
oneThirdPriceMovement = (high - low) / 3
topThirdPrice = high - oneThirdPriceMovement
bottomThird = low + oneThirdPriceMovement
hc = close > topThirdPrice
lc = close < bottomThird
outside = close >= high[1]
inside = close <= low[1]

candelCloseLabel = if hc
    'H'
else if lc
    'L'
else
    'M'

comparisonLabel = outside or inside ? 'O' : 'I'
candelAnalysisLabel = candelCloseLabel + comparisonLabel

// Session

var bool withinSession = false
var int barCount = 0
bgcolor(showsessionBG and inSession(sessionRange) ? color.new(sessionBGColor, 90) : color.new(color.white, 100))


// Check if a new session has begun
if inSession(sessionRange) and not inSession(sessionRange)[1]
    withinSession := true
    withinSession

// Check if a session has ended
if not inSession(sessionRange) and inSession(sessionRange)[1]
    withinSession := false
    barCount := 0
    barCount

// Add labels when in a session
if withinSession
    barCount += 1
    if showCandelCounter and barCount % 2 == 0
        label.new(x=bar_index, y=na, yloc=yloc.belowbar, style=label.style_none, textcolor=barCountColor, text='\n' + str.tostring(barCount))
    if showCandelAnalysis
        cl = label.new(x=bar_index, y=na, yloc=yloc.belowbar, style=label.style_none, textcolor=candelAnalysisColor, text=candelAnalysisLabel)
        if candelAnalysisLast2Only
            label.delete(cl[2])
